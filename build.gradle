//All libraries and versions are configured here and reused in subprojects to minimize conflicts
ext.libraries = [
	"asm-all": "asm:asm-all:3.3.1",
	"blinkytape": "com.leohart:blinkytape:1.0",
	"comm": "javax.comm:comm:2.0.3",
	"commons-httpclient": "commons-httpclient:commons-httpclient:3.1",
	"commons-lang": "commons-lang:commons-lang:2.4",
	"commons-logging": "commons-logging:commons-logging:1.1.1",
	"easymock": "org.easymock:easymock:2.4",
	"easymockclassextension": "org.easymock:easymockclassextension:2.4",
	"freetts": "org.mobicents.external.freetts:freetts:1.2.2",
	"google-guava": "com.google.guava:guava:12.0",
	"groovy-all": "org.codehaus.groovy:groovy-all:2.4.3",
	"http-builder": "org.codehaus.groovy.modules.http-builder:http-builder:0.7",
	"jackson-core-lgpl": "org.codehaus.jackson:jackson-core-lgpl:1.7.1",
	"jackson-mapper-lgpl": "org.codehaus.jackson:jackson-mapper-lgpl:1.7.1",
	"jdom": "jdom:jdom:1.0",
	"joda-time": "joda-time:joda-time:2.2",
	"jssc": "org.scream3r:jssc:2.8.0",
	"junit": "junit:junit:4.5",
	"log4j": "log4j:log4j:1.2.14",
	"micheldalal-x10": "com.micheldalal.x10:x10:1.0.1",
	"pragauto-x10": "com.pragauto:x10:1.0",
	"rome": "rome:rome:0.9",
	"spring-context": "org.springframework:spring-context:4.0.3.RELEASE",
	"spring-core": "org.springframework:spring-core:4.0.3.RELEASE"
]

allprojects  {
	apply plugin: 'application'
	apply plugin: 'maven'
	apply plugin: "jacoco"
	apply plugin: "eclipse"
	apply plugin: "java"
	apply plugin: "groovy"

	group = 'com.leohart'
	version = '1.5.0-SNAPSHOT'
	
	repositories {		
		mavenLocal()
		mavenCentral()

		maven { url "https://repository.jboss.org/nexus/" }
		maven { url "http://download.java.net/maven/2/" }
		maven { url "http://repo.maven.apache.org/maven2" }
		maven { url 'http://dl.bintray.com/content/johnrengelman/gradle-plugins' }
		
		jcenter()
	}
	
	
	jacoco {
        toolVersion = '0.7.1.201405082137'
    }
	
	task listJars << { task ->
		println "$task.project.name dependencies:"
		configurations.compile.each { File file -> println "\t" + file.name }
	}
}

subprojects {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	
	jacocoTestReport {
		additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
		sourceDirectories = files(sourceSets.main.allSource.srcDirs)
		classDirectories =  files(sourceSets.main.output)
		reports {
			html.enabled = true
			xml.enabled = true
			csv.enabled = false
		}
	}
}

apply plugin: "sonar-runner"

buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url 'http://dl.bintray.com/content/johnrengelman/gradle-plugins' }
	}
	
	dependencies {
		classpath 'org.gradle.plugins:shadow:0.7.4'
	}
}

task jacocoAggregateReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
    dependsOn = subprojects.test
    additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories = files(subprojects.sourceSets.main.output)
    executionData = files(subprojects.jacocoTestReport.executionData)
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
    onlyIf = {
        true
    }
    doFirst {
        executionData = files(executionData.findAll {
            it.exists()
        })
    }
}

